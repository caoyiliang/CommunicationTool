<Window x:Name="window" x:Class="CommunicationTool.View.SerialPortTest"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:CommunicationTool.View" 
        xmlns:l="clr-namespace:CommunicationTool"
        xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:i="clr-namespace:CommunicationTool.Behaviors"
        xmlns:converter="clr-namespace:CommunicationTool.Converters"
        xmlns:ctrl="clr-namespace:CommunicationTool.Control"
        xmlns:viewmodel="clr-namespace:CommunicationTool.ViewModel" 
        d:DataContext="{d:DesignInstance Type=viewmodel:SerialPortViewModel}"
        Style="{StaticResource TestWindow}"
        mc:Ignorable="d"
        Title="SerialPortTest" Height="450" Width="800">
    <Window.Resources>
        <converter:SerialPortConnectStatusConverter x:Key="SerialPortConnectStatusConverter"/>
        <converter:PopupStatusConverter x:Key="PopupStatusConverter"/>
        <converter:RadioButtonCheckedConverter x:Key="RadioButtonCheckedConverter"/>
        <converter:TransferDirectionConverter x:Key="TransferDirectionConverter"/>
    </Window.Resources>
    <b:Interaction.Behaviors>
        <i:CloseBehavior Command="{Binding CloseCommand}"/>
        <i:ClosePopupBehavior PopupVisible="{Binding HasPopupVisible}"/>
    </b:Interaction.Behaviors>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>
            <StackPanel Orientation="Horizontal">
                <StackPanel.Resources>
                    <Style TargetType="RadioButton">
                        <Setter Property="Margin" Value="5"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                    </Style>
                    <Style TargetType="CheckBox">
                        <Setter Property="Margin" Value="5"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                    </Style>
                </StackPanel.Resources>
                <CheckBox Content="自动存储" IsChecked="True"/>
                <RadioButton Content="HEX" GroupName="showType" IsChecked="{Binding SelectedShowType, Converter={StaticResource RadioButtonCheckedConverter}, ConverterParameter={x:Static l:DataType.HEX}}"/>
                <RadioButton Content="ASCII" GroupName="showType" IsChecked="{Binding SelectedShowType, Converter={StaticResource RadioButtonCheckedConverter}, ConverterParameter={x:Static l:DataType.ASCII}}"/>
                <RadioButton Content="UTF8" GroupName="showType" IsChecked="{Binding SelectedShowType, Converter={StaticResource RadioButtonCheckedConverter}, ConverterParameter={x:Static l:DataType.UTF8}}"/>
                <RadioButton Content="GB2312" GroupName="showType" IsChecked="{Binding SelectedShowType, Converter={StaticResource RadioButtonCheckedConverter}, ConverterParameter={x:Static l:DataType.GB2312}}"/>
                <CheckBox Content="显示接收时间" IsChecked="True"/>
                <CheckBox Content="显示发送" IsChecked="True"/>
            </StackPanel>

            <ItemsControl ItemsSource="{Binding CommunicationDatas}" VirtualizingPanel.IsVirtualizing="True" VirtualizingPanel.VirtualizationMode="Recycling" Margin="10,0" Grid.Row="1">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <VirtualizingStackPanel />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="{Binding DateTime,StringFormat='{}{0:yyyy-MM-dd HH:mm:ss.fff}'}" Margin="5"/>
                            <TextBlock Text="{Binding TransferDirection,Converter={StaticResource TransferDirectionConverter}}" Margin="5"/>
                            <TextBox Text="{Binding Message,Mode=OneWay}" IsReadOnly="True" Margin="5" BorderThickness="0" Background="Transparent"/>
                        </StackPanel>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
                <ItemsControl.Template>
                    <ControlTemplate TargetType="ItemsControl">
                        <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" CanContentScroll="True" Focusable="False">
                            <b:Interaction.Behaviors>
                                <i:ScrollViewerBehavior AutoScroll="{Binding DataContext.AutoScroll, RelativeSource={RelativeSource AncestorType=Window}}"/>
                            </b:Interaction.Behaviors>
                            <ItemsPresenter />
                        </ScrollViewer>
                    </ControlTemplate>
                </ItemsControl.Template>
            </ItemsControl>

            <DockPanel Grid.Row="2">
                <DockPanel.Resources>
                    <Style TargetType="TextBlock">
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="Margin" Value="2"/>
                    </Style>
                </DockPanel.Resources>
                <StackPanel Orientation="Horizontal" Margin="10,3">
                    <TextBlock Text="接收字节数:"/>
                    <TextBlock Text="{Binding RsponseLength}" TextDecorations="Underline" TextWrapping="Wrap"/>
                </StackPanel>
                <StackPanel Orientation="Horizontal" Margin="50,0">
                    <TextBlock Text="发送字节数:"/>
                    <TextBlock Text="{Binding RequestLength}" TextDecorations="Underline" TextWrapping="Wrap"/>
                </StackPanel>
                <CheckBox IsChecked="{Binding AutoScroll}" Content="自动滚动" Margin="10,0" HorizontalAlignment="Right" VerticalAlignment="Center" DockPanel.Dock="Right"/>
            </DockPanel>
            <Grid Grid.Row="3">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>
                <StackPanel Orientation="Horizontal">
                    <Button Content="{Binding IsOpen,Converter={StaticResource SerialPortConnectStatusConverter}}" Margin="10" Padding="10,5" Command="{Binding ConnectCommand}"/>
                    <TextBlock Text="快速发送：" VerticalAlignment="Center"/>
                    <ComboBox ItemsSource="{Binding SendTypes}" SelectedItem="{Binding SelectedSendType}" VerticalContentAlignment="Center" Width="80" Margin="0,10"/>
                </StackPanel>
                <TextBox Text="{Binding SendData,UpdateSourceTrigger=PropertyChanged}" Margin="10" Grid.Column="1" VerticalContentAlignment="Center"/>
                <StackPanel Orientation="Horizontal" Grid.Column="2">
                    <Grid>
                        <Grid.Resources>
                            <Style TargetType="CheckBox">
                                <Setter Property="VerticalAlignment" Value="Center"/>
                                <Setter Property="VerticalContentAlignment" Value="Center"/>
                            </Style>
                        </Grid.Resources>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <CheckBox Content="回车" IsChecked="{Binding CR}"/>
                        <CheckBox Content="换行" IsChecked="{Binding LF}" Grid.Row="1"/>
                    </Grid>
                    <ComboBox ItemsSource="{Binding CrcTypes}" SelectedItem="{Binding CrcType}" VerticalContentAlignment="Center" Width="100" Margin="5,10"/>
                    <Button Content="发送" Margin="10" Padding="10,5" Command="{Binding SendCommand}"/>
                </StackPanel>
            </Grid>
        </Grid>
        <StatusBar Padding="5" Grid.Row="2" Grid.ColumnSpan="2">
            <StatusBar.Resources>
                <Style TargetType="Button">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <TextBlock Text="{TemplateBinding Content}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </StatusBar.Resources>
            <StatusBarItem>
                <Grid>
                    <Button Content="{Binding Status}" Command="{Binding SetSerialPortConfigCommand}"/>
                    <Popup IsOpen="{Binding IsPopupVisible}" StaysOpen="False" Placement="MousePoint" AllowsTransparency="True">
                        <Popup.Resources>
                            <Style TargetType="Label">
                                <Setter Property="Foreground" Value="White"/>
                                <Setter Property="Margin" Value="2"/>
                            </Style>
                            <Style TargetType="ComboBox">
                                <Setter Property="Margin" Value="2"/>
                            </Style>
                            <Style TargetType="TextBox">
                                <Setter Property="Margin" Value="2"/>
                            </Style>
                            <Style TargetType="CheckBox">
                                <Setter Property="Foreground" Value="White"/>
                                <Setter Property="Margin" Value="2"/>
                            </Style>
                        </Popup.Resources>
                        <Grid Width="165" Height="200" Background="#590000FF">
                            <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Label Content="串口号"/>
                                <ComboBox ItemsSource="{Binding PortNames}" SelectedItem="{Binding SerialPortConnection.PortName}" Grid.Column="1"/>
                                <Label Content="波特率" Grid.Row="1"/>
                                <ComboBox ItemsSource="{Binding BaudRates}" SelectedItem="{Binding SerialPortConnection.BaudRate}" Grid.Column="1" Grid.Row="1" IsEditable="True"/>
                                <Label Content="数据位" Grid.Row="2"/>
                                <ComboBox ItemsSource="{Binding DataBits}" SelectedItem="{Binding SerialPortConnection.DataBits}" Grid.Column="1" Grid.Row="2"/>
                                <Label Content="停止位" Grid.Row="3"/>
                                <ComboBox ItemsSource="{Binding StopBits}" SelectedItem="{Binding SerialPortConnection.StopBits}" Grid.Column="1" Grid.Row="3"/>
                                <Label Content="校验位" Grid.Row="4"/>
                                <ComboBox ItemsSource="{Binding Parity}" SelectedItem="{Binding SerialPortConnection.Parity}" Grid.Column="1" Grid.Row="4"/>
                                <Grid Grid.Column="1" Grid.Row="5">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <CheckBox Content="DTR" IsChecked="{Binding SerialPortConnection.DTR}"/>
                                    <CheckBox Content="RTS" IsChecked="{Binding SerialPortConnection.RTS}" Grid.Column="1"/>
                                </Grid>
                            </Grid>
                        </Grid>
                    </Popup>
                </Grid>
            </StatusBarItem>
            <StatusBarItem HorizontalAlignment="Right">
                <Grid>
                    <Button Content="{Binding HasPopupVisible,Converter={StaticResource PopupStatusConverter}}" Command="{Binding HasPopupCommand}"/>
                    <ctrl:CustomPopup IsOpen="{Binding HasPopupVisible}" StaysOpen="True" Placement="Right" PlacementTarget="{Binding ElementName=window}" AllowsTransparency="True" >
                        <Border Background="#66FFFFFF" CornerRadius="8" Width="500" Height="{Binding ActualHeight, ElementName=window, Mode=OneWay}">
                            <Border Background="#66FFFF00" CornerRadius="8">
                                <Grid>

                                </Grid>
                            </Border>
                        </Border>
                    </ctrl:CustomPopup>
                </Grid>
            </StatusBarItem>
        </StatusBar>
    </Grid>
</Window>
