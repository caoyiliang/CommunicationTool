<Window x:Name="window" x:Class="CommunicationTool.View.SerialPortTest"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:CommunicationTool.View"
        xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:i="clr-namespace:CommunicationTool.Behaviors"
        xmlns:config="clr-namespace:Config;assembly=Config"
        xmlns:core="clr-namespace:System;assembly=mscorlib"
        xmlns:converter="clr-namespace:CommunicationTool.Converters"
        xmlns:ctrl="clr-namespace:CommunicationTool.Control"
        xmlns:viewmodel="clr-namespace:CommunicationTool.ViewModel" 
        d:DataContext="{d:DesignInstance Type=viewmodel:SerialPortViewModel}"
        Style="{StaticResource TestWindow}"
        mc:Ignorable="d"
        Title="SerialPortTest" Height="450" Width="800">
    <Window.Resources>
        <converter:SerialPortConnectStatusConverter x:Key="SerialPortConnectStatusConverter"/>
        <converter:PopupStatusConverter x:Key="PopupStatusConverter"/>
    </Window.Resources>
    <b:Interaction.Behaviors>
        <i:CloseBehavior Command="{Binding CloseCommand}"/>
        <!--<i:ClosePopupBehavior PopupVisible="{Binding HasPopupVisible}"/>-->
    </b:Interaction.Behaviors>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>
            <local:Receive DataContext="{Binding ReceiveViewModel}" />
            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Button Content="{Binding IsOpen,Converter={StaticResource SerialPortConnectStatusConverter}}" Margin="10" Padding="10,5" Command="{Binding ConnectCommand}"/>
                <local:Send Grid.Column="1" DataContext="{Binding SendViewModel}"/>
            </Grid>
        </Grid>
        <StatusBar Padding="5" Grid.Row="2" Grid.ColumnSpan="2">
            <StatusBar.Resources>
                <Style TargetType="Button">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <TextBlock Text="{TemplateBinding Content}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </StatusBar.Resources>
            <StatusBarItem>
                <Grid>
                    <Button Content="{Binding Status}" Command="{Binding SetSerialPortConfigCommand}"/>
                    <Popup IsOpen="{Binding IsPopupVisible}" StaysOpen="False" Placement="MousePoint" AllowsTransparency="True">
                        <Popup.Resources>
                            <Style TargetType="Label">
                                <Setter Property="Foreground" Value="White"/>
                                <Setter Property="Margin" Value="2"/>
                            </Style>
                            <Style TargetType="ComboBox">
                                <Setter Property="Margin" Value="2"/>
                            </Style>
                            <Style TargetType="TextBox">
                                <Setter Property="Margin" Value="2"/>
                            </Style>
                            <Style TargetType="CheckBox">
                                <Setter Property="Foreground" Value="White"/>
                                <Setter Property="Margin" Value="2"/>
                            </Style>
                        </Popup.Resources>
                        <Grid Width="165" Height="200" Background="#590000FF">
                            <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Label Content="串口号"/>
                                <ComboBox ItemsSource="{Binding PortNames}" SelectedItem="{Binding SerialPortConnection.PortName}" Grid.Column="1"/>
                                <Label Content="波特率" Grid.Row="1"/>
                                <ComboBox ItemsSource="{Binding BaudRates}" SelectedItem="{Binding SerialPortConnection.BaudRate}" Grid.Column="1" Grid.Row="1" IsEditable="True"/>
                                <Label Content="数据位" Grid.Row="2"/>
                                <ComboBox ItemsSource="{Binding DataBits}" SelectedItem="{Binding SerialPortConnection.DataBits}" Grid.Column="1" Grid.Row="2"/>
                                <Label Content="停止位" Grid.Row="3"/>
                                <ComboBox ItemsSource="{Binding StopBits}" SelectedItem="{Binding SerialPortConnection.StopBits}" Grid.Column="1" Grid.Row="3"/>
                                <Label Content="校验位" Grid.Row="4"/>
                                <ComboBox ItemsSource="{Binding Parity}" SelectedItem="{Binding SerialPortConnection.Parity}" Grid.Column="1" Grid.Row="4"/>
                                <Grid Grid.Column="1" Grid.Row="5">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <CheckBox Content="DTR" IsChecked="{Binding SerialPortConnection.DTR}"/>
                                    <CheckBox Content="RTS" IsChecked="{Binding SerialPortConnection.RTS}" Grid.Column="1"/>
                                </Grid>
                            </Grid>
                        </Grid>
                    </Popup>
                </Grid>
            </StatusBarItem>
            <StatusBarItem HorizontalAlignment="Right">
                <Grid>
                    <Button Content="{Binding HasPopupVisible,Converter={StaticResource PopupStatusConverter}}" Command="{Binding HasPopupCommand}"/>
                    <ctrl:CustomPopup IsOpen="{Binding HasPopupVisible}" StaysOpen="True" Placement="Right" PlacementTarget="{Binding ElementName=window}" AllowsTransparency="True" >
                        <Border Background="#66FFFFFF" CornerRadius="8" Width="500" Height="{Binding ActualHeight, ElementName=window, Mode=OneWay}">
                            <DataGrid ItemsSource="{Binding SendCmds}" AutoGenerateColumns="False" CanUserAddRows="True" CanUserDeleteRows="True">
                                <DataGrid.Resources>
                                    <ObjectDataProvider x:Key="SendTypeEnum" MethodName="GetValues" ObjectType="{x:Type core:Enum}">
                                        <ObjectDataProvider.MethodParameters>
                                            <x:Type Type="config:DataType"/>
                                        </ObjectDataProvider.MethodParameters>
                                    </ObjectDataProvider>
                                    <ObjectDataProvider x:Key="CrcTypeEnum" MethodName="GetValues" ObjectType="{x:Type core:Enum}">
                                        <ObjectDataProvider.MethodParameters>
                                            <x:Type Type="config:CrcType"/>
                                        </ObjectDataProvider.MethodParameters>
                                    </ObjectDataProvider>
                                </DataGrid.Resources>
                                <DataGrid.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#6654FF00"/>
                                        <GradientStop Color="#66FF0000" Offset="1"/>
                                    </LinearGradientBrush>
                                </DataGrid.Background>
                                <DataGrid.Columns>
                                    <DataGridCheckBoxColumn/>
                                    <DataGridTextColumn Header="名称" Binding="{Binding Name}" Width="3*"/>
                                    <DataGridComboBoxColumn Header="类型" SelectedItemBinding="{Binding SendType}" ItemsSource="{Binding Source={StaticResource SendTypeEnum}}" Width="2*"/>
                                    <DataGridTextColumn Header="发送命令" Binding="{Binding DisplayCmd}" Width="4*"/>
                                    <DataGridCheckBoxColumn Header="回车" Binding="{Binding CR}" Width="*"/>
                                    <DataGridCheckBoxColumn Header="换行" Binding="{Binding LF}"  Width="*"/>
                                    <DataGridComboBoxColumn Header="校验" SelectedItemBinding="{Binding CrcType}" ItemsSource="{Binding Source={StaticResource CrcTypeEnum}}" Width="2*"/>
                                    <DataGridTemplateColumn Header="操作" Width="auto">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <Button Content="发送" Command="{Binding DataContext.SendDataCommand,RelativeSource={RelativeSource AncestorType=Window}}" CommandParameter="{Binding DataContext,RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                </DataGrid.Columns>
                            </DataGrid>
                        </Border>
                    </ctrl:CustomPopup>
                </Grid>
            </StatusBarItem>
        </StatusBar>
    </Grid>
</Window>
